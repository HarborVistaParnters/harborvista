---
import Image from "../Image.astro";
// import portfolioImg from "../../assets/lb-5.jpg"

const portfolioImg = "src/assets/lb-5.jpg"

import * as siteSettings from "../../content/settings/Harbor-Vista.md"
import * as portfolioSection from "../../content/navigation/Our-Portfolio.md"
let portfolioData = await Astro.glob("../../content/portfolio/*.md");
portfolioData = portfolioData.sort((a, b) => a.frontmatter.order - b.frontmatter.order);

// const portfolioData = [
//     {
//         name: "Total Value",
//         value: "58",
//         id: 'value'
//     },
//     {
//         name: "Total Properties",
//         value: "24",
//         id: 'properties'
//     },
//     {
//         name: "Total Units Permitted",
//         subtitle: "(Entitlement Consultant)",
//         value: "1500",
//         id: 'permitted'
//     }
// ]

const { id, content } = Astro.props;

---

<article id={id} class="max-w-7xl mx-auto px-4 pt-12 grid md:grid-cols-2 gap-16 items-center"  x-intersect={`linkActive = '${id}'`}>
    <div class="md:col-span-2 text-center max-w-[43rem] mx-auto text-lg">
        <div class="space-y-6 max-w-none prose prose-p:text-neutral-700 prose-p:text-lg prose-strong:font-semibold prose-strong:text-brand-400" set:html={siteSettings.compiledContent()} />
        <!-- <p>Since inception in 2020, the firm has purchased <span class="font-semibold text-brand-400">27 properties</span> with <span class="font-semibold text-brand-400">3 dispositions</span>, <span class="font-semibold text-brand-400">9 stabilized refinances</span>, and <span class="font-semibold text-brand-400">15 properties in the active development pipeline</span>.</p>
        <p>Harbor Vistaâ€™s real estate portfolio has an estimated value of <span class="font-black text-brand-400">$58,000,000</span>.</p> -->
    </div>
    <!-- Image -->
    <div class="relative md:m-8">
        <div class="absolute inset-0 z-10 flex justify-center items-center"><h2 class="font-semibold tracking-[0.15em] uppercase text-white text-4xl text-center ">{portfolioSection.frontmatter.name}</h2></div>
        <div class="absolute inset-0 z-[2] bg-black/30 rounded-2xl"></div>
        <Image src={portfolioImg} alt="Long Beach harbor" class="object-cover aspect-[4/5] rounded-2xl" />
        <!-- <img src={portfolioImg} alt="Long Beach" class="object-cover aspect-[4/5] rounded-2xl"> -->
    </div>
    <!-- Stats -->
    <div class="space-y-8 lg:pl-8">
        {portfolioData.map(item =>
            <div class="flex flex-col justify-center items-center md:items-start space-y-4 border-t border-neutral-400/30 pt-8 first:pt-0 first:border-none">
                <div class="inline-flex items-center gap-2">
                    <span class="sr-only" id={`${item.frontmatter.statId}-val`}>{item.frontmatter.stat}</span>
                    <div class="font-black text-7xl text-brand-700" id={item.frontmatter.statId}>
                        {item.frontmatter.stat}
                    </div>
                    {item.frontmatter.statId !== 'properties' && <div class="text-accent text-4xl">+</div>}
                </div>
                <div class="uppercase tracking-[0.15em] text-neutral-600">{item.frontmatter.description}</div>
                {item.frontmatter.subtitle && <div>{item.frontmatter.subtitle}</div>}
            </div>
        )}
    </div>
</article>

<script>
    import { CountUp } from 'countup.js'

    // Get end values from a hidden DOM element that takes in values from CMS
    let valueVal = document.getElementById("value-val").childNodes[0].nodeValue;
    let propertiesVal = document.getElementById("properties-val").childNodes[0].nodeValue;
    let permittedVal = document.getElementById("permitted-val").childNodes[0].nodeValue;

    const values = { value: valueVal, properties: propertiesVal, permitted: permittedVal }

    // Reference https://github.com/danro/jquery-easing/blob/master/jquery.easing.js
    const easeInOutSine = (t, b, c, d) => {
		return -c/2 * (Math.cos(Math.PI*t/d) - 1) + b;
	};

    let baseOptions = { startVal: 0, easingFn: easeInOutSine, enableScrollSpy: true, scrollSpyOnce: true, duration: 1.5 }
    const formattingOptions = { prefix: '$', suffix: 'M' }

    // Ignore type errors, should work clientside
    const counter1 = new CountUp('value', values.value, {...baseOptions, ...formattingOptions });
    const counter2 = new CountUp('properties', values.properties, baseOptions);
    const counter3 = new CountUp('permitted', values.permitted, {...baseOptions })
</script>