---
import Button from "./Button.astro";

const { navigation } = Astro.props;
---
<header 
    x-data="scrollToReveal()"
    x-ref="navbar"
    x-on:scroll.window="scroll()"
    x-bind:class="{ 'top-0': shown, '-top-24': !shown }"
    class="hidden md:block fixed left-0 right-0 transition-all duration-300 z-50 bg-white shadow-lg shadow-brand-700/10"
>
    <div class="flex flex-wrap justify-between items-center px-4 xl:px-12 py-6 mx-auto">
        <div>
            <a href="#" class="uppercase tracking-widest font-semibold text-brand-400 hover:text-brand-400/70">Harbor Vista</a>
        </div>
        <nav class="flex gap-4 flex-wrap items-center text-center">
            <!-- Use Alpine x-bind to add conditional active state class when element with same id scrolls into view -->
            <!-- See individual sections for intersect; x-data is on body el -->
            {navigation.map(item =>
                <a href={`#${item.href}`} class="py-2 px-4 rounded-md transition-colors hover:text-brand-400 hover:bg-brand-300/40" x-bind:class={`linkActive == '${item.href}' ? 'text-brand-400' : 'text-neutral-700' `}>{item.name}</a>
            )}
            <Button className="ml-4">Investors
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="relative -top-[0.5px] w-4 h-4 transition-transform group-hover:translate-x-1">
                    <path fill-rule="evenodd" d="M3 10a.75.75 0 01.75-.75h10.638L10.23 5.29a.75.75 0 111.04-1.08l5.5 5.25a.75.75 0 010 1.08l-5.5 5.25a.75.75 0 11-1.04-1.08l4.158-3.96H3.75A.75.75 0 013 10z" clip-rule="evenodd" />
                </svg>
            </Button>
        </nav>
    </div>
</header>

<script is:inline>
    function scrollToReveal() {
        return {
            shown: true,
            lastPos: window.scrollY + 0,
            scroll() {
                if (window.scrollY < 200) {
                    this.shown = true;
                } else {
                    this.shown = window.scrollY > this.$refs.navbar.offsetHeight && this.lastPos > window.scrollY;
                    this.lastPos = window.scrollY;
                }
            }
        }
    }
</script>